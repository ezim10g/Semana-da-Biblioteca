
//display (X,Y) Ordem para posicionar o curso em pixels


#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <EEPROM.h>

#define SCREEN_WIDTH 128 // Largura display, em pixels
#define SCREEN_HEIGHT 64 // Altura display, em pixels
// Altura e largura logo (alterar tamanho se necessário)
#define LOGO_HEIGHT   64
#define LOGO_WIDTH  128
  
// Declaração pino reset para I2C
#define OLED_RESET  -1 // Será o mesmo reset da placa

int contador=0;

#define pinBotao 2
#define pinLED  13
/////
unsigned long tempoInicio = 0;
unsigned long tempoBotao = 0;
bool estadoBotao;
bool estadoBotaoAnt;
////

//codigo para mostra uma imagem no display
// Cole entre chaves o código gerado no site 
static const unsigned char PROGMEM FilipeFlop[] =
{ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 
  0x80, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 
  0xff, 0x00, 0x7f, 0xfc, 0x07, 0xff, 0xfc, 0x3f, 0xe0, 0x3f, 0x00, 0x1f, 0xe0, 0x03, 0xf1, 0xfe, 
  0x80, 0x00, 0xff, 0xfe, 0x07, 0xff, 0xfc, 0x7f, 0xe0, 0x3f, 0x00, 0x3f, 0xe0, 0x07, 0xf0, 0x06, 
  0x80, 0x01, 0xff, 0xfe, 0x0f, 0xff, 0xfc, 0x7f, 0xe0, 0x3e, 0x00, 0x7f, 0xe0, 0x07, 0xf0, 0x06, 
  0x80, 0x03, 0xff, 0xff, 0x0f, 0xff, 0xfc, 0x7f, 0xf0, 0x7e, 0x00, 0x7f, 0xf0, 0x07, 0xe0, 0x06, 
  0x80, 0x07, 0xf8, 0x7f, 0x0f, 0xe0, 0x00, 0x7f, 0xf0, 0x7e, 0x00, 0xff, 0xf0, 0x07, 0xe0, 0x06, 
  0xff, 0x07, 0xf0, 0x7f, 0x0f, 0xc0, 0x00, 0x7f, 0xf0, 0x7e, 0x00, 0xfb, 0xf0, 0x07, 0xe3, 0xfe, 
  0x80, 0x07, 0xe0, 0x3e, 0x0f, 0xc0, 0x00, 0xfd, 0xf0, 0x7e, 0x01, 0xfb, 0xf0, 0x0f, 0xe0, 0x06, 
  0x80, 0x07, 0xf0, 0x00, 0x1f, 0xc0, 0x00, 0xfd, 0xf8, 0xfc, 0x03, 0xf3, 0xf0, 0x0f, 0xe0, 0x06, 
  0x80, 0x07, 0xfe, 0x00, 0x1f, 0xc0, 0x00, 0xfd, 0xf8, 0xfc, 0x03, 0xe3, 0xf0, 0x0f, 0xc0, 0x06, 
  0x80, 0x07, 0xff, 0xe0, 0x1f, 0xff, 0xf0, 0xfd, 0xf8, 0xfc, 0x07, 0xe3, 0xf8, 0x0f, 0xc0, 0x06, 
  0xfe, 0x07, 0xff, 0xf8, 0x1f, 0xff, 0xe0, 0xf8, 0xf8, 0xfc, 0x0f, 0xc3, 0xf8, 0x0f, 0xc1, 0xfe, 
  0xff, 0x01, 0xff, 0xfc, 0x3f, 0xff, 0xe1, 0xf8, 0xfc, 0xf8, 0x0f, 0xc3, 0xf8, 0x0f, 0xc1, 0xfe, 
  0x80, 0x00, 0x7f, 0xfc, 0x3f, 0xff, 0xe1, 0xf8, 0xfd, 0xf8, 0x1f, 0x83, 0xf8, 0x1f, 0xc0, 0x06, 
  0x80, 0x00, 0x07, 0xfe, 0x3f, 0x80, 0x01, 0xf8, 0xfd, 0xf8, 0x1f, 0xff, 0xf8, 0x1f, 0x80, 0x06, 
  0x80, 0x00, 0x01, 0xfe, 0x3f, 0x00, 0x01, 0xf0, 0xfd, 0xf8, 0x3f, 0xff, 0xf8, 0x1f, 0x80, 0x06, 
  0x80, 0x3f, 0x81, 0xfc, 0x3f, 0x00, 0x03, 0xf0, 0x7d, 0xf8, 0x7f, 0xff, 0xfc, 0x3f, 0x80, 0x06, 
  0xff, 0x3f, 0x81, 0xfc, 0x7f, 0x00, 0x03, 0xf0, 0x7f, 0xf0, 0x7f, 0xff, 0xfc, 0x3f, 0x83, 0xfe, 
  0x80, 0x3f, 0x83, 0xfc, 0x7f, 0x00, 0x03, 0xf0, 0x7f, 0xf0, 0xff, 0xff, 0xfc, 0x3f, 0x80, 0x06, 
  0x80, 0x3f, 0xff, 0xf8, 0x7f, 0xff, 0xc3, 0xf0, 0x7f, 0xf0, 0xfc, 0x01, 0xfc, 0x3f, 0x00, 0x06, 
  0x80, 0x1f, 0xff, 0xf0, 0x7f, 0xff, 0xc3, 0xe0, 0x3f, 0xf1, 0xf8, 0x01, 0xfc, 0x3f, 0x00, 0x06, 
  0x80, 0x1f, 0xff, 0xe0, 0x7f, 0xff, 0xc7, 0xe0, 0x3f, 0xf3, 0xf8, 0x01, 0xfe, 0x7f, 0x00, 0x06, 
  0xff, 0x0f, 0xff, 0x80, 0xff, 0xff, 0xc7, 0xe0, 0x3f, 0xe3, 0xf0, 0x01, 0xfe, 0x7f, 0x01, 0xfe, 
  0x80, 0x01, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xbf, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0x3c, 0x0f, 0x80, 0xf8, 0x0e, 0x03, 0xfc, 0xf9, 0xf9, 0xfd, 0xf3, 0x80, 0xcf, 0x98, 0x06, 
  0xff, 0x38, 0xe3, 0x9e, 0x71, 0xde, 0x7f, 0xfc, 0xf1, 0xf8, 0xfd, 0xf3, 0x9f, 0xcf, 0x9f, 0xc6, 
  0xff, 0x39, 0xf3, 0x9e, 0x73, 0xfe, 0x7f, 0xfc, 0x61, 0xf2, 0xfd, 0xf3, 0xbf, 0xcf, 0x9f, 0xce, 
  0xff, 0x33, 0xf9, 0x9e, 0x67, 0xfe, 0x7f, 0xfd, 0x29, 0xf6, 0x7d, 0xf3, 0xbf, 0xcf, 0x9f, 0x9e, 
  0xff, 0x33, 0xf9, 0x9e, 0x67, 0x8e, 0x03, 0xfd, 0x89, 0xe7, 0x7c, 0x03, 0x81, 0xcf, 0x9f, 0x3e, 
  0xff, 0x33, 0xf9, 0x80, 0xe7, 0xee, 0x7f, 0xfd, 0x99, 0xe7, 0x3c, 0xf3, 0x9f, 0xcf, 0x9e, 0x7e, 
  0xff, 0x39, 0xf3, 0x99, 0xf3, 0xee, 0x7f, 0xfd, 0xdd, 0xe0, 0x3d, 0xf3, 0xbf, 0xcf, 0xbc, 0xfe, 
  0xf7, 0x39, 0xe3, 0x9c, 0xf3, 0xee, 0x7f, 0xfd, 0xf9, 0xcf, 0xbd, 0xf3, 0xbf, 0xe7, 0x3c, 0xfe, 
  0xf0, 0x7c, 0x07, 0x9e, 0x78, 0x0e, 0x03, 0xfd, 0xfd, 0xdf, 0x9d, 0xf3, 0xbf, 0xe0, 0x78, 0x06, 
  0xf8, 0xff, 0x1f, 0x9e, 0x7e, 0x3f, 0x03, 0xfd, 0xfd, 0x9f, 0xdd, 0xf7, 0xbf, 0xf8, 0xf8, 0x06, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe
  };

/////////////////

Adafruit_SSD1306 display = Adafruit_SSD1306(128, 64, &Wire);


//Adafruit_SSD1306 display(-1);


void setup() { 
  ////
  Serial.begin(9600);
   if(EEPROM[0] != 9){
    EEPROM[0] = 9;
    EEPROM[1]= contador;
  }else{
    contador = EEPROM[1];
  }
  
  
  ////
  pinMode(2, INPUT_PULLUP); // define o pino do botao como entrada
  pinMode(pinLED, OUTPUT);
  digitalWrite(pinLED, HIGH);

  //inicia o display
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);  

  display.clearDisplay(); // nao mostra o logo na inicialização

//CHAMA O LOGO
  testdrawbitmap();
  // Inverte cores no display
  //display.invertDisplay(true);
  // Aguarda 1 s
  delay(2000);
  display.clearDisplay();

 /// LOGO

 // Muda o tamanho da fonte
  display.setTextColor(WHITE); // Cores do texto 'invertido'
  display.setTextSize(2); // Tamanho da fonte
  display.setCursor(7,20);
  display.println(F("Bem vindo!"));
  display.display();
  delay(2000);
  display.clearDisplay();

  ////////////////////////////

  //Logo do senai aqui

  ///////////////////////////

   // MOSTRAR apresentação da equipe
  display.setTextSize(1);
  display.setCursor(18,2);
  display.println(F("--Turma TDS1N--"));
  display.setCursor(0,25);
   
  display.println(F("     Ezio - Larissa"));
  display.println(F(" Leonardo - Andreza"));
  display.println(F("  Emerson - Vitor"));

 
  display.display();
  delay(4000);
  display.clearDisplay(); 


  
  /////////////////////////////
// MOSTRAR apresentação da equipe
  display.setTextSize(1);
  display.setCursor(18,2);
  display.println(F("--Professora--"));
  display.setTextSize(2);
  display.setCursor(25,25);
  display.println(F("Cintia"));
  display.display();
  delay(4000);
  display.clearDisplay(); 






///////////////////////////////









    // MOSTRAR A ULTIMA PAGINA LIDA APOS AS BOAS VINDAS
  display.setTextSize(1);
  display.setCursor(10,2);
  display.println(F("Ultima pagina lida"));
  display.display();
 // delay(500);
   display.setTextSize(4);
  display.setCursor(30,25);
  display.println(contador); 
  display.display();
  
  
  //delay(3000);
  display.clearDisplay(); 
    

}
//////////////////////////////////////////////////////


////////////////////////////////////////////////////

// Sub-rotina para criar bitmap
void testdrawbitmap(void) {
  // Limpa display
  display.clearDisplay();
  
  // Preenche tela com bitmap
  display.drawBitmap(
    (display.width()  - LOGO_WIDTH ) / 2,
    (display.height() - LOGO_HEIGHT) / 2,
    FilipeFlop, LOGO_WIDTH, LOGO_HEIGHT, 1);
  // Exibe no display 
  display.display();
  // Aguarda 1 s
  delay(1000);
}


////////////////////////////////////////////////////


void loop() {
  estadoBotao = !digitalRead(pinBotao);

  //Ao apertar o botão
  if (estadoBotao && !estadoBotaoAnt) {
    if (tempoInicio == 0) {
      tempoInicio = millis();
     
     

    }
  }  

  //Ao soltar o botão
  if (tempoInicio > 200) {  //Filtro Debounce
    if (!estadoBotao && estadoBotaoAnt) {
      tempoBotao = millis() - tempoInicio;
      tempoInicio = 0;  
     
    }
  }

  

  //Retorno
  if (tempoInicio > 0) {
    // digitalWrite(pinLED, bitRead(millis(),8)); 
     Serial.println(F("bit"));
  }

  

//  Comando 1
  if ((tempoBotao > 0) && (tempoBotao <= 500)) {
     tempoBotao = 0;
     Serial.println(F("Comando 1 executado"));

    while (digitalRead(2) == LOW);
    delay(100);
    contador++;               // soma 1 ao int contador a cada execução do loop
    delay(100);

    // Mensagens Motivacionais

switch (contador) {
  case 1:
    // faz algo quando var é igual a 1
      display.clearDisplay(); 
      display.setTextSize(1);
      display.setCursor(2,17);
      display.println(F("A persistencia e o caminho do exito"));
      display.display();  
      delay(3500);
    break;
  case 5:
      display.clearDisplay(); 
      display.setTextSize(1);
      display.setCursor(1,17);
      display.println(F("Livros sao sonhos que seguramos com as maos"));
      display.display();  
      delay(3500);
    // faz algo quando var é igual a 2
    break;
  case 10:
      display.clearDisplay(); 
      display.setTextSize(1);
      display.setCursor(2,17);
      display.println(F("Ler para se libertar do mundo comum"));
      display.display();  
      delay(3500);
    // faz algo quando var é igual a 2
    break;
  case 15:
      display.clearDisplay(); 
      display.setTextSize(1);
      display.setCursor(2,17);
      display.println(F("Voce nao achaque esta na hora de descansar"));
       display.display();  
      delay(3500);
    // faz algo quando var é igual a 2
    break; 
   case 25:
    // faz algo quando var é igual a
      display.clearDisplay(); 
      display.setTextSize(1);
      display.setCursor(2,17);
      display.println(F("Ler e ganhar asas para o mundo"));
      display.display();  
      delay(3500);
    break;
   case 40:
    // faz algo quando var é igual a
      display.clearDisplay(); 
      display.setTextSize(1);
      display.setCursor(2,17);
      display.println(F("Ler nao da sono ler. Ler da sonhos"));
      display.display();  
      delay(3500);    
    break;  
   case 50:
   
    // faz algo quando var é igual a
      display.clearDisplay(); 
      display.setTextSize(1);
      display.setCursor(2,17);
      display.println(F("Voce e o que voce le"));
      display.println(F("Se voce nao le cade voce"));
      display.println(F("cade voce"));
      display.display();  
      delay(3500);

    break;  
   case 70:
    // faz algo quando var é igual a
      display.clearDisplay(); 
      display.setTextSize(1);
      display.setCursor(2,17);
      display.println(F("Acredito no poder da leitura como um estimulo para a vida"));
      display.display();  
      delay(4500);

    
    break;  
   case 100:
    // faz algo quando var é igual a
          display.clearDisplay(); 
      display.setTextSize(1);
      display.setCursor(2,17);
      display.println(F("Ler para se libertar do mundo comum"));
      display.display();  
      delay(3500);
    
    break;  
   case 120:
    // faz algo quando var é igual a
        display.clearDisplay(); 
      display.setTextSize(1);
      display.setCursor(2,17);
      display.println(F("O habito da leitura nos faz abrir a mente e explorar novas possibilidades"));
      display.display();  
      delay(4500);
    
    break;  
   case 140:
    // faz algo quando var é igual a

          display.clearDisplay(); 
      display.setTextSize(1);
      display.setCursor(2,17);
      display.println(F("O livro e o melhor companheiro em um dia chuvoso. Te leva para qualquer lugar sem sair de casa"));
      display.display();  
      delay(5000);
    
    break;  
   case 150:
    // faz algo quando var é igual a
          display.clearDisplay(); 
      display.setTextSize(1);
      display.setCursor(2,17);
      display.println(F("Livros sao sonhos que seguramos com as maos"));
      display.display();  
      delay(3500);

    break;
   case 180:
    // faz algo quando var é igual a
          display.clearDisplay(); 
      display.setTextSize(1);
      display.setCursor(2,17);
      display.println(F("Livros sao sonhos que seguramos com as maos"));
      display.display();  
      delay(3500);

    break;
    case 200:
    // faz algo quando var é igual a
          display.clearDisplay(); 
      display.setTextSize(1);
      display.setCursor(2,17);
      display.println(F("A leitura e uma porta aberta para um mundo de descobertas sem fim"));
      display.display();  
      delay(4000);

    break;
    case 210:
    // faz algo quando var é igual a
          display.clearDisplay(); 
      display.setTextSize(1);
      display.setCursor(2,17);
      display.println(F("As palavras de um livro preenchem a mente, nutrem a alma e aquecem o coracao"));
      display.display();  
      delay(4000);

    break; 
  case 230:
    // faz algo quando var é igual a
          display.clearDisplay(); 
      display.setTextSize(1);
      display.setCursor(2,17);
      display.println(F("Cada pagina lida de um livro e um universo cheio de possibilidades sendo descoberto aos poucos"));
      display.display();  
      delay(4500);

    break;
  case 250:
    // faz algo quando var é igual a
          display.clearDisplay(); 
      display.setTextSize(1);
      display.setCursor(2,17);
      display.println(F("A leitura engrandece a alma"));
      display.display();  
      delay(3500);

    break;
    case 260:
    // faz algo quando var é igual a
          display.clearDisplay(); 
      display.setTextSize(1);
      display.setCursor(2,17);
      display.println(F("A leitura de um bom livro e um dialogo incessante, o livro fala e a alma responde"));
      display.display();  
      delay(4500);

    break;
     case 270:
    // faz algo quando var é igual a
          display.clearDisplay(); 
      display.setTextSize(1);
      display.setCursor(2,3);
      display.println(F("O processo de leitura possibilita essa operacao maravilhosa que e o encontro do que esta dentro do livro com o que esta guardado na cabeca"));
      display.display();  
      delay(5000);
      
    break;

     case 300:
    // faz algo quando var é igual a
          display.clearDisplay(); 
      display.setTextSize(1);
      display.setCursor(2,17);
      display.println(F("A leitura nao deve ser mais do que um exercicio para nos obrigar a pensar"));
      display.display();  
      delay(3500);
      
    break;

     case 500:
    // faz algo quando var é igual a
          display.clearDisplay(); 
      display.setTextSize(1);
      display.setCursor(2,17);
      display.println(F("O livro traz a vantagem de a gente poder estar so e ao mesmo tempo acompanhado"));
      display.display();  
      delay(3500);
      
    break;

  default:
    // Se nenhum dos anteriores, faz o caso padrão default
    // default é opcional
    break;
}




      // MOSTRA O NUMERO DA ULTIMA PAGINA LIDA
  // texto display
   display.clearDisplay(); 
  display.setTextSize(1);
  display.setCursor(7,2);
  display.println(F("Ultima pagina lida"));
  display.display();
 // delay(500);
   display.setTextSize(4);
  display.setCursor(30,25);
  display.println(contador); 
  display.display();
  
  
  //delay(3000);
  display.clearDisplay(); 
  //delay(500);
    
  EEPROM[1] = contador; // Salva o numero da pagina na memoria pemrmanente
  
  }
  

  //Comando 2
  if ((tempoBotao > 500) && (tempoBotao <= 3000)) {
     tempoBotao = 0;
     Serial.println(F("Comando 2 executado"));

     digitalWrite(pinLED, !digitalRead(13));

   
  }

  //Comando 3
  if (tempoBotao > 3000) {
     tempoBotao = 0;
     Serial.println(F("Comando 3 executado"));

  contador = 0;

  // texto display
  display.setTextSize(1);
  display.setCursor(7,2);
  display.println(F("Ultima pagina lida"));
  display.display();
 // delay(500);
   display.setTextSize(4);
  display.setCursor(30,25);
  display.println(contador); 
  display.display();
  
  
  //delay(3000);
  display.clearDisplay(); 
  //delay(500);
    

  }

  estadoBotaoAnt = estadoBotao;
  delay(20);
}

